// <auto-generated />
using System;
using LabaForms.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LabaForms.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231220184131_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LabaForms.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal?>("PlanPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("LabaForms.Models.Norm", b =>
                {
                    b.Property<int>("PartId")
                        .HasColumnType("integer");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<decimal>("FinalMinuteTime")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PieceMinuteTime")
                        .HasColumnType("numeric");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("integer");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<int>("TarifId")
                        .HasColumnType("integer");

                    b.HasKey("PartId", "OperationId");

                    b.HasIndex("OperationId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("TarifId");

                    b.ToTable("Norms");
                });

            modelBuilder.Entity("LabaForms.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<decimal>("NeededAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("PartId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PartId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("LabaForms.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DetailType")
                        .HasColumnType("integer");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<decimal>("PlanPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("LabaForms.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("LabaForms.Models.Tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PerHour")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Tarifs");
                });

            modelBuilder.Entity("LabaForms.Models.Norm", b =>
                {
                    b.HasOne("LabaForms.Models.Operation", "Operation")
                        .WithMany("Norms")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabaForms.Models.Part", "Part")
                        .WithMany("Norms")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabaForms.Models.Profession", "Profession")
                        .WithMany("Norms")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabaForms.Models.Tarif", "Tarif")
                        .WithMany("Norms")
                        .HasForeignKey("TarifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("Part");

                    b.Navigation("Profession");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("LabaForms.Models.Operation", b =>
                {
                    b.HasOne("LabaForms.Models.Material", "Material")
                        .WithMany("Operations")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabaForms.Models.Part", "Part")
                        .WithMany("Operations")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("LabaForms.Models.Material", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("LabaForms.Models.Operation", b =>
                {
                    b.Navigation("Norms");
                });

            modelBuilder.Entity("LabaForms.Models.Part", b =>
                {
                    b.Navigation("Norms");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("LabaForms.Models.Profession", b =>
                {
                    b.Navigation("Norms");
                });

            modelBuilder.Entity("LabaForms.Models.Tarif", b =>
                {
                    b.Navigation("Norms");
                });
#pragma warning restore 612, 618
        }
    }
}
